{
  "version": 4,
  "terraform_version": "1.5.7",
  "serial": 58,
  "lineage": "3f986587-f22a-c8ec-412c-730c96c0c245",
  "outputs": {
    "cluster_name": {
      "value": "dev-cluster",
      "type": "string"
    },
    "control_plane_node_image": {
      "value": "kindest/node:v1.29.1",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argocd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "v3.1.9",
              "chart": "argo-cd",
              "first_deployed": 1761184266,
              "last_deployed": 1761184266,
              "name": "argocd",
              "namespace": "argocd",
              "notes": "\nIn order to access the server UI you have the following options:\n\n1. kubectl port-forward service/argocd-server -n argocd 8080:443\n\n    and then open the browser on http://localhost:8080 and accept the certificate\n\n2. enable ingress in the values file `server.ingress.enabled` and either\n      - Add the annotation for ssl passthrough: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-1-ssl-passthrough\n      - Set the `configs.params.\"server.insecure\"` in the values file and terminate SSL at your ingress: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-2-multiple-ingress-objects-and-hosts\n\n\nAfter reaching the UI the first time you can login with username: admin and the random password generated during the installation. You can find the password by running:\n\nkubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d\n\n(You should delete the initial secret afterwards as suggested by the Getting Started Guide: https://argo-cd.readthedocs.io/en/stable/getting_started/#4-login-using-the-cli)\n",
              "revision": 1,
              "values": "{\"configs\":{\"params\":{\"server\":{\"insecure\":true}}},\"server\":{\"service\":{\"nodePortHttp\":30081,\"nodePortHttps\":30443,\"type\":\"NodePort\"}}}",
              "version": "9.0.3"
            },
            "name": "argocd",
            "namespace": "argocd",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "server.service.type",
                "type": "",
                "value": "NodePort"
              },
              {
                "name": "server.service.nodePortHttp",
                "type": "",
                "value": "30081"
              },
              {
                "name": "server.service.nodePortHttps",
                "type": "",
                "value": "30443"
              },
              {
                "name": "configs.params.server.insecure",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "9.0.3",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "dependencies": [
            "kind_cluster.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "cert_manager",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "cert-manager",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "cert-manager",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "v1.15.2",
              "chart": "cert-manager",
              "first_deployed": 1761275327,
              "last_deployed": 1761275327,
              "name": "cert-manager",
              "namespace": "cert-manager",
              "notes": "\n⚠️  WARNING: `installCRDs` is deprecated, use `crds.enabled` instead.\ncert-manager v1.15.2 has been deployed successfully!\n\nIn order to begin issuing certificates, you will need to set up a ClusterIssuer\nor Issuer resource (for example, by creating a 'letsencrypt-staging' issuer).\n\nMore information on the different types of issuers and how to configure them\ncan be found in our documentation:\n\nhttps://cert-manager.io/docs/configuration/\n\nFor information on how to configure cert-manager to automatically provision\nCertificates for Ingress resources, take a look at the `ingress-shim`\ndocumentation:\n\nhttps://cert-manager.io/docs/usage/ingress/\n",
              "revision": 1,
              "values": "{\"installCRDs\":true}",
              "version": "v1.15.2"
            },
            "name": "cert-manager",
            "namespace": "cert-manager",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.jetstack.io",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "installCRDs",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "v1.15.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kind_cluster",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/tehcyx/kind\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "client_certificate": "-----BEGIN CERTIFICATE-----\nMIIDKTCCAhGgAwIBAgIIHWwsKS4AMOwwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNTEwMjMwMDU2NTRaFw0yNjEwMjMwMTAxNTZaMDwx\nHzAdBgNVBAoTFmt1YmVhZG06Y2x1c3Rlci1hZG1pbnMxGTAXBgNVBAMTEGt1YmVy\nbmV0ZXMtYWRtaW4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDNyVBq\nim8FcfvvlbYWKf45VKk8jmstkx70nL7k/rb3yWRvzXnCNK8/rXB4Gy0cGXl5dT2n\nPFyYz37D/wdOujrZpI9onyUJEVrUzwsN1/5KE4OfAXeuyElByBbmU0ulBWL+5Bmz\no5J4FnJBR2TlY8vE4Vmuw5cQRwOx+i76m5QBe/V1X6tt9e4q3RQHGXjv/TJIbfj0\ngBbZIpg2RBSMbrtu/pFIFkEEOqrFSZAHMjYxcuLOvNSpzo6qpnDc94eA6I/0jfzS\nZlPdInU8KlOi8VvvgdgfaWQH2uUwyoHi9hevDXABszA4EeHwhMRrsYgbUgXZTX21\nY3QWlE3zySzNCscbAgMBAAGjVjBUMA4GA1UdDwEB/wQEAwIFoDATBgNVHSUEDDAK\nBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFHrd1O1xmUlBBb4z\nED9V4Qjix76lMA0GCSqGSIb3DQEBCwUAA4IBAQAq1lSc9IeCwYkCarLVSSz+ViHa\nJW2Qg3BJGAiP8Q7J7rgNhrDQ20bxSZRAh5wMKqSUslcLwvN8Q0NiPFSkpiuQMaTE\nOvWsPM/A+4D6grbe6moLDnGKXe22Nk18R4B1s7wp14i2+7YMzKFt6gkCqasf6QYr\nrlmAs9YldGB5IoZNPDrQ70NlmCASjxbLLBZtfuPLwiOWJsWtvQxcbGXM8FKQ4ef1\n6Mym6g/MtzA6986bbTiw0zMUeEpi35hM919/B/UYg//4REPhvBfv26mK2fJKnEo5\n2d6eX1Ijvb0SQJj1M/LoB/C9jaimiEs74g79bh9gdn/oU+rGfTkosmIc177O\n-----END CERTIFICATE-----\n",
            "client_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAzclQaopvBXH775W2Fin+OVSpPI5rLZMe9Jy+5P6298lkb815\nwjSvP61weBstHBl5eXU9pzxcmM9+w/8HTro62aSPaJ8lCRFa1M8LDdf+ShODnwF3\nrshJQcgW5lNLpQVi/uQZs6OSeBZyQUdk5WPLxOFZrsOXEEcDsfou+puUAXv1dV+r\nbfXuKt0UBxl47/0ySG349IAW2SKYNkQUjG67bv6RSBZBBDqqxUmQBzI2MXLizrzU\nqc6OqqZw3PeHgOiP9I380mZT3SJ1PCpTovFb74HYH2lkB9rlMMqB4vYXrw1wAbMw\nOBHh8ITEa7GIG1IF2U19tWN0FpRN88kszQrHGwIDAQABAoIBAQDMP26ggEwXFH4g\n2vBCaWWZU40xvI1mS6qi0NyrfqDtqScVzNR3zEDQq/2ASEDqreIiihoqXb/uL6w7\nLmn7Wt3EXQ+1oJdqu53ysJjhIauTrHCsJhG7GbGUJ9uKucvPu1v5bz6PTN+4b1bx\nscHT58w82gpgamMKVeG2CYINXNN27+DWcbdahyhTtGUsuwp9wTsJteT6aUU1ECCX\nSWmHZTOTZRgFT01jSueMG+B/n+NXj+jgTNEbt3/JTBf1s4/sej5aqW5km2JKAMbD\n9vEUUKePbgW5MhjIMPsgREoOBNbez8YmYT9yLnBGRs4LGYqNElWvoCXyP3mW181y\nLqZGYxPBAoGBAN2duU4bg+AWkp07BQ5xx8Qo0FW06drtb/ycOhl19nl7rNgwQyzX\nvd5A9Pup/J2dcMKVSMJmV6oznKllwbAMlEWn7daghhlseAGrD/YqNVfg/Xd/4LNF\nDI5cCuM0OpY7dDuAgi8zbDCS9aEhnRcF2cVQqg6thbRyrKyWb8oma3uhAoGBAO22\n2ytj0rznXvAGhNP+8JrdIrfDd+Zb7aa64bZaXjlAGrmfbsnoB74UvgEiegVQQnau\nY76rQIkhyAulpwgKGDKum4ZObPxpzERkP/tH6wj+3eZ4/T5rGw4Ne5Ni2Kg/DTAW\nmgDBt/bPfrGO7l+3rzjG3HRgrvt44AuWRAJcqKk7AoGAdmoye4PEQVaOXKkOmJs/\nTJcqSsFyO2KndejcOoKHgn4M6y9OlYVplHpM7LP1oRphB/fQet9IdE9DpFgU2EbA\naz/Bm+8F+Eu3C90lmDkRa7VyegnAPMnmXaLcxm4/58o43xpZdXMamhHMYZ6eW5Dq\nvb3OQC2DxdmIXme7r947jEECgYBngjzzKtdjrDfZumzyRsuME4h/jhzScOsNs8h+\n9+CZe0Fn3HWIc4GTkkKeCd4qHCWkuhDywG0siUorUCloRcT9pKxSEipAyuzIRwLZ\nLxq34wrKxZo4KLkyKErMBbmjoTjj3KOYesHZNcbMGBnSEhC5X1Y1Urg/BgZA5WCd\nyq0iawKBgQC1oTS2LkiF0ErtR9y4vUlFYJAABes+lS41vRqj+11fD6Jr/TNY2w04\nMmx+Ua3b4u9uXLl8roEBFUHVazxSSbiI02lsRSG00+DV95zdrsUIOAPBK9tVnBva\nRrwJGHlyezlAwT3Esj+vGFErD2n3Cq+12MJXqGJjAQwJcYjYN1/dqA==\n-----END RSA PRIVATE KEY-----\n",
            "cluster_ca_certificate": "-----BEGIN CERTIFICATE-----\nMIIDBTCCAe2gAwIBAgIIRFgYGqkQ4q8wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNTEwMjMwMDU2NTRaFw0zNTEwMjEwMTAxNTRaMBUx\nEzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQCuGL3yIfb2ef+ofWiM/oYa/GHY9IOq6Ssbh8x2RfWNURMtMNYPGfF0pyXa\nCTuhfdI2F/wJE4bybMxV/kfzNr8E8ccGMV3Fc2ccrNTLpguQ2QD09IdFQiDOGm/5\n5/LbO2wqGIENAtuJn0xr/6ynbkFE/uB0MYxugOnSBWHKmD/mH1q91aLLxfH+QviY\n7bWjChloTL+Jz+KxAFvRhnnEicCdRFNKJtx98n7z1XBPMnUDuvSnw4KEPP22/imy\nUMGatQrJVjWaxwKVo461CfwMCuQWJjGlzYm2l7aK6T5MmqgydcA7s4YvSRDepV/f\n+Mbu19LQ6XR0k1FTMrZ7ymqgxYJ5AgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP\nBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBR63dTtcZlJQQW+MxA/VeEI4se+pTAV\nBgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQCoZfYDv6hq\nfZNsG89vm0CEWjWf2+j1LO2HiXDhebyzpOc2OVRnFplLCtvHvPSmo2nqjcJHJM6R\nXe6IE5el+/lY+btt26yQQmZ41SiBR1s5LaJPRaB1/kaOlnwDIboRW7F4Vq2AwTIq\n22PxdsFKAup8gOEiO81ZDCpTJ2P3h2i+uu5wmxjmwVc5NF07wk0AiWkb/C/Tc26P\n3/wC35AjD5IM3KGFUH3gnb55CarvYSfrCmOjmMo4XFj5gXzaa+NGGblJp7G2xK0y\nw2FFCowMIYAaeeq3r7YhRZmKX2EhyQlUlk0vMp8NCVR8anWwyAG3ZBbS9AnR7yIX\n9cxGOT/3Nzef\n-----END CERTIFICATE-----\n",
            "completed": true,
            "endpoint": "https://127.0.0.1:62870",
            "id": "dev-cluster-",
            "kind_config": [
              {
                "api_version": "kind.x-k8s.io/v1alpha4",
                "containerd_config_patches": [],
                "feature_gates": {},
                "kind": "Cluster",
                "networking": [],
                "node": [
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [
                      {
                        "container_port": 80,
                        "host_port": 80,
                        "listen_address": "",
                        "protocol": ""
                      },
                      {
                        "container_port": 443,
                        "host_port": 443,
                        "listen_address": "",
                        "protocol": ""
                      }
                    ],
                    "image": "kindest/node:v1.29.1",
                    "kubeadm_config_patches": [
                      "kind: InitConfiguration\nnodeRegistration:\n  kubeletExtraArgs:\n    node-labels: \"ingress-ready=true\"\n"
                    ],
                    "labels": {},
                    "role": "control-plane"
                  },
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [],
                    "image": "kindest/node:v1.29.1",
                    "kubeadm_config_patches": [],
                    "labels": {},
                    "role": "worker"
                  }
                ],
                "runtime_config": {}
              }
            ],
            "kubeconfig": "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJUkZnWUdxa1E0cTh3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRFd01qTXdNRFUyTlRSYUZ3MHpOVEV3TWpFd01UQXhOVFJhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUN1R0wzeUlmYjJlZitvZldpTS9vWWEvR0hZOUlPcTZTc2JoOHgyUmZXTlVSTXRNTllQR2ZGMHB5WGEKQ1R1aGZkSTJGL3dKRTRieWJNeFYva2Z6TnI4RThjY0dNVjNGYzJjY3JOVExwZ3VRMlFEMDlJZEZRaURPR20vNQo1L0xiTzJ3cUdJRU5BdHVKbjB4ci82eW5ia0ZFL3VCME1ZeHVnT25TQldIS21EL21IMXE5MWFMTHhmSCtRdmlZCjdiV2pDaGxvVEwrSnorS3hBRnZSaG5uRWljQ2RSRk5LSnR4OThuN3oxWEJQTW5VRHV2U253NEtFUFAyMi9pbXkKVU1HYXRRckpWaldheHdLVm80NjFDZndNQ3VRV0pqR2x6WW0ybDdhSzZUNU1tcWd5ZGNBN3M0WXZTUkRlcFYvZgorTWJ1MTlMUTZYUjBrMUZUTXJaN3ltcWd4WUo1QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSNjNkVHRjWmxKUVFXK014QS9WZUVJNHNlK3BUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ29aZllEdjZocQpmWk5zRzg5dm0wQ0VXaldmMitqMUxPMkhpWERoZWJ5enBPYzJPVlJuRnBsTEN0dkh2UFNtbzJucWpjSkhKTTZSClhlNklFNWVsKy9sWStidHQyNnlRUW1aNDFTaUJSMXM1TGFKUFJhQjEva2FPbG53RElib1JXN0Y0VnEyQXdUSXEKMjJQeGRzRktBdXA4Z09FaU84MVpEQ3BUSjJQM2gyaSt1dTV3bXhqbXdWYzVORjA3d2swQWlXa2IvQy9UYzI2UAozL3dDMzVBakQ1SU0zS0dGVUgzZ25iNTVDYXJ2WVNmckNtT2ptTW80WEZqNWdYemFhK05HR2JsSnA3RzJ4SzB5CncyRkZDb3dNSVlBYWVlcTNyN1loUlptS1gyRWh5UWxVbGswdk1wOE5DVlI4YW5Xd3lBRzNaQmJTOUFuUjd5SVgKOWN4R09ULzNOemVmCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    server: https://127.0.0.1:62870\n  name: kind-dev-cluster\ncontexts:\n- context:\n    cluster: kind-dev-cluster\n    user: kind-dev-cluster\n  name: kind-dev-cluster\ncurrent-context: kind-dev-cluster\nkind: Config\npreferences: {}\nusers:\n- name: kind-dev-cluster\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lJSFd3c0tTNEFNT3d3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRFd01qTXdNRFUyTlRSYUZ3MHlOakV3TWpNd01UQXhOVFphTUR3eApIekFkQmdOVkJBb1RGbXQxWW1WaFpHMDZZMngxYzNSbGNpMWhaRzFwYm5NeEdUQVhCZ05WQkFNVEVHdDFZbVZ5CmJtVjBaWE10WVdSdGFXNHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETnlWQnEKaW04RmNmdnZsYllXS2Y0NVZLazhqbXN0a3g3MG5MN2svcmIzeVdSdnpYbkNOSzgvclhCNEd5MGNHWGw1ZFQybgpQRnlZejM3RC93ZE91anJacEk5b255VUpFVnJVendzTjEvNUtFNE9mQVhldXlFbEJ5QmJtVTB1bEJXTCs1Qm16Cm81SjRGbkpCUjJUbFk4dkU0Vm11dzVjUVJ3T3graTc2bTVRQmUvVjFYNnR0OWU0cTNSUUhHWGp2L1RKSWJmajAKZ0JiWklwZzJSQlNNYnJ0dS9wRklGa0VFT3FyRlNaQUhNall4Y3VMT3ZOU3B6bzZxcG5EYzk0ZUE2SS8wamZ6UwpabFBkSW5VOEtsT2k4VnZ2Z2RnZmFXUUgydVV3eW9IaTloZXZEWEFCc3pBNEVlSHdoTVJyc1lnYlVnWFpUWDIxClkzUVdsRTN6eVN6TkNzY2JBZ01CQUFHalZqQlVNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUsKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkhyZDFPMXhtVWxCQmI0egpFRDlWNFFqaXg3NmxNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFxMWxTYzlJZUN3WWtDYXJMVlNTeitWaUhhCkpXMlFnM0JKR0FpUDhRN0o3cmdOaHJEUTIwYnhTWlJBaDV3TUtxU1VzbGNMd3ZOOFEwTmlQRlNrcGl1UU1hVEUKT3ZXc1BNL0ErNEQ2Z3JiZTZtb0xEbkdLWGUyMk5rMThSNEIxczd3cDE0aTIrN1lNektGdDZna0NxYXNmNlFZcgpybG1BczlZbGRHQjVJb1pOUERyUTcwTmxtQ0FTanhiTExCWnRmdVBMd2lPV0pzV3R2UXhjYkdYTThGS1E0ZWYxCjZNeW02Zy9NdHpBNjk4NmJiVGl3MHpNVWVFcGkzNWhNOTE5L0IvVVlnLy80UkVQaHZCZnYyNm1LMmZKS25FbzUKMmQ2ZVgxSWp2YjBTUUpqMU0vTG9CL0M5amFpbWlFczc0Zzc5Ymg5Z2RuL29VK3JHZlRrb3NtSWMxNzdPCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBemNsUWFvcHZCWEg3NzVXMkZpbitPVlNwUEk1ckxaTWU5SnkrNVA2Mjk4bGtiODE1CndqU3ZQNjF3ZUJzdEhCbDVlWFU5cHp4Y21NOSt3LzhIVHJvNjJhU1BhSjhsQ1JGYTFNOExEZGYrU2hPRG53RjMKcnNoSlFjZ1c1bE5McFFWaS91UVpzNk9TZUJaeVFVZGs1V1BMeE9GWnJzT1hFRWNEc2ZvdStwdVVBWHYxZFYrcgpiZlh1S3QwVUJ4bDQ3LzB5U0czNDlJQVcyU0tZTmtRVWpHNjdidjZSU0JaQkJEcXF4VW1RQnpJMk1YTGl6cnpVCnFjNk9xcVp3M1BlSGdPaVA5STM4MG1aVDNTSjFQQ3BUb3ZGYjc0SFlIMmxrQjlybE1NcUI0dllYcncxd0FiTXcKT0JIaDhJVEVhN0dJRzFJRjJVMTl0V04wRnBSTjg4a3N6UXJIR3dJREFRQUJBb0lCQVFETVAyNmdnRXdYRkg0ZwoydkJDYVdXWlU0MHh2STFtUzZxaTBOeXJmcUR0cVNjVnpOUjN6RURRcS8yQVNFRHFyZUlpaWhvcVhiL3VMNnc3CkxtbjdXdDNFWFErMW9KZHF1NTN5c0pqaElhdVRySENzSmhHN0diR1VKOXVLdWN2UHUxdjViejZQVE4rNGIxYngKc2NIVDU4dzgyZ3BnYW1NS1ZlRzJDWUlOWE5OMjcrRFdjYmRhaHloVHRHVXN1d3A5d1RzSnRlVDZhVVUxRUNDWApTV21IWlRPVFpSZ0ZUMDFqU3VlTUcrQi9uK05YaitqZ1RORWJ0My9KVEJmMXM0L3NlajVhcVc1a20ySktBTWJECjl2RVVVS2VQYmdXNU1oaklNUHNnUkVvT0JOYmV6OFltWVQ5eUxuQkdSczRMR1lxTkVsV3ZvQ1h5UDNtVzE4MXkKTHFaR1l4UEJBb0dCQU4yZHVVNGJnK0FXa3AwN0JRNXh4OFFvMEZXMDZkcnRiL3ljT2hsMTlubDdyTmd3UXl6WAp2ZDVBOVB1cC9KMmRjTUtWU01KbVY2b3puS2xsd2JBTWxFV243ZGFnaGhsc2VBR3JEL1lxTlZmZy9YZC80TE5GCkRJNWNDdU0wT3BZN2REdUFnaTh6YkRDUzlhRWhuUmNGMmNWUXFnNnRoYlJ5ckt5V2I4b21hM3VoQW9HQkFPMjIKMnl0ajByem5YdkFHaE5QKzhKcmRJcmZEZCtaYjdhYTY0YlphWGpsQUdybWZic25vQjc0VXZnRWllZ1ZRUW5hdQpZNzZyUUlraHlBdWxwd2dLR0RLdW00Wk9iUHhwekVSa1AvdEg2d2orM2VaNC9UNXJHdzROZTVOaTJLZy9EVEFXCm1nREJ0L2JQZnJHTzdsKzNyempHM0hSZ3J2dDQ0QXVXUkFKY3FLazdBb0dBZG1veWU0UEVRVmFPWEtrT21Kcy8KVEpjcVNzRnlPMktuZGVqY09vS0hnbjRNNnk5T2xZVnBsSHBNN0xQMW9ScGhCL2ZRZXQ5SWRFOURwRmdVMkViQQphei9CbSs4RitFdTNDOTBsbURrUmE3VnllZ25BUE1ubVhhTGN4bTQvNThvNDN4cFpkWE1hbWhITVlaNmVXNURxCnZiM09RQzJEeGRtSVhtZTdyOTQ3akVFQ2dZQm5nanp6S3RkanJEZlp1bXp5UnN1TUU0aC9qaHpTY09zTnM4aCsKOStDWmUwRm4zSFdJYzRHVGtrS2VDZDRxSENXa3VoRHl3RzBzaVVvclVDbG9SY1Q5cEt4U0VpcEF5dXpJUndMWgpMeHEzNHdyS3habzRLTGt5S0VyTUJibWpvVGpqM0tPWWVzSFpOY2JNR0JuU0VoQzVYMVkxVXJnL0JnWkE1V0NkCnlxMGlhd0tCZ1FDMW9UUzJMa2lGMEVydFI5eTR2VWxGWUpBQUJlcytsUzQxdlJxaisxMWZENkpyL1ROWTJ3MDQKTW14K1VhM2I0dTl1WExsOHJvRUJGVUhWYXp4U1NiaUkwMmxzUlNHMDArRFY5NXpkcnNVSU9BUEJLOXRWbkJ2YQpScndKR0hseWV6bEF3VDNFc2ordkdGRXJEMm4zQ3ErMTJNSlhxR0pqQVF3SmNZallOMS9kcUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\n",
            "kubeconfig_path": "/Users/johndoe/kind-cluster/dev-cluster-config",
            "name": "dev-cluster",
            "node_image": null,
            "timeouts": null,
            "wait_for_ready": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "letsencrypt_prod",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "cert-manager.io/v1",
                "kind": "ClusterIssuer",
                "metadata": {
                  "name": "letsencrypt-prod"
                },
                "spec": {
                  "acme": {
                    "email": "your-email@example.com",
                    "privateKeySecretRef": {
                      "name": "letsencrypt-prod"
                    },
                    "server": "https://acme-v02.api.letsencrypt.org/directory",
                    "solvers": [
                      {
                        "http01": {
                          "ingress": {
                            "class": "nginx"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "acme": [
                        "object",
                        {
                          "email": "string",
                          "privateKeySecretRef": [
                            "object",
                            {
                              "name": "string"
                            }
                          ],
                          "server": "string",
                          "solvers": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "http01": [
                                    "object",
                                    {
                                      "ingress": [
                                        "object",
                                        {
                                          "class": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "cert-manager.io/v1",
                "kind": "ClusterIssuer",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "letsencrypt-prod",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "acme": {
                    "caBundle": null,
                    "disableAccountKeyGeneration": null,
                    "email": "your-email@example.com",
                    "enableDurationFeature": null,
                    "externalAccountBinding": {
                      "keyAlgorithm": null,
                      "keyID": null,
                      "keySecretRef": {
                        "key": null,
                        "name": null
                      }
                    },
                    "preferredChain": null,
                    "privateKeySecretRef": {
                      "key": null,
                      "name": "letsencrypt-prod"
                    },
                    "server": "https://acme-v02.api.letsencrypt.org/directory",
                    "skipTLSVerify": null,
                    "solvers": [
                      {
                        "dns01": {
                          "acmeDNS": {
                            "accountSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "host": null
                          },
                          "akamai": {
                            "accessTokenSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "clientSecretSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "clientTokenSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "serviceConsumerDomain": null
                          },
                          "azureDNS": {
                            "clientID": null,
                            "clientSecretSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "environment": null,
                            "hostedZoneName": null,
                            "managedIdentity": {
                              "clientID": null,
                              "resourceID": null
                            },
                            "resourceGroupName": null,
                            "subscriptionID": null,
                            "tenantID": null
                          },
                          "cloudDNS": {
                            "hostedZoneName": null,
                            "project": null,
                            "serviceAccountSecretRef": {
                              "key": null,
                              "name": null
                            }
                          },
                          "cloudflare": {
                            "apiKeySecretRef": {
                              "key": null,
                              "name": null
                            },
                            "apiTokenSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "email": null
                          },
                          "cnameStrategy": null,
                          "digitalocean": {
                            "tokenSecretRef": {
                              "key": null,
                              "name": null
                            }
                          },
                          "rfc2136": {
                            "nameserver": null,
                            "tsigAlgorithm": null,
                            "tsigKeyName": null,
                            "tsigSecretSecretRef": {
                              "key": null,
                              "name": null
                            }
                          },
                          "route53": {
                            "accessKeyID": null,
                            "accessKeyIDSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "auth": {
                              "kubernetes": {
                                "serviceAccountRef": {
                                  "audiences": null,
                                  "name": null
                                }
                              }
                            },
                            "hostedZoneID": null,
                            "region": null,
                            "role": null,
                            "secretAccessKeySecretRef": {
                              "key": null,
                              "name": null
                            }
                          },
                          "webhook": {
                            "config": null,
                            "groupName": null,
                            "solverName": null
                          }
                        },
                        "http01": {
                          "gatewayHTTPRoute": {
                            "labels": null,
                            "parentRefs": null,
                            "serviceType": null
                          },
                          "ingress": {
                            "class": "nginx",
                            "ingressClassName": null,
                            "ingressTemplate": {
                              "metadata": {
                                "annotations": null,
                                "labels": null
                              }
                            },
                            "name": null,
                            "podTemplate": {
                              "metadata": {
                                "annotations": null,
                                "labels": null
                              },
                              "spec": {
                                "affinity": {
                                  "nodeAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": null,
                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                      "nodeSelectorTerms": null
                                    }
                                  },
                                  "podAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": null,
                                    "requiredDuringSchedulingIgnoredDuringExecution": null
                                  },
                                  "podAntiAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": null,
                                    "requiredDuringSchedulingIgnoredDuringExecution": null
                                  }
                                },
                                "imagePullSecrets": null,
                                "nodeSelector": null,
                                "priorityClassName": null,
                                "serviceAccountName": null,
                                "tolerations": null
                              }
                            },
                            "serviceType": null
                          }
                        },
                        "selector": {
                          "dnsNames": null,
                          "dnsZones": null,
                          "matchLabels": null
                        }
                      }
                    ]
                  },
                  "ca": {
                    "crlDistributionPoints": null,
                    "issuingCertificateURLs": null,
                    "ocspServers": null,
                    "secretName": null
                  },
                  "selfSigned": {
                    "crlDistributionPoints": null
                  },
                  "vault": {
                    "auth": {
                      "appRole": {
                        "path": null,
                        "roleId": null,
                        "secretRef": {
                          "key": null,
                          "name": null
                        }
                      },
                      "kubernetes": {
                        "mountPath": null,
                        "role": null,
                        "secretRef": {
                          "key": null,
                          "name": null
                        },
                        "serviceAccountRef": {
                          "audiences": null,
                          "name": null
                        }
                      },
                      "tokenSecretRef": {
                        "key": null,
                        "name": null
                      }
                    },
                    "caBundle": null,
                    "caBundleSecretRef": {
                      "key": null,
                      "name": null
                    },
                    "clientCertSecretRef": {
                      "key": null,
                      "name": null
                    },
                    "clientKeySecretRef": {
                      "key": null,
                      "name": null
                    },
                    "namespace": null,
                    "path": null,
                    "server": null
                  },
                  "venafi": {
                    "cloud": {
                      "apiTokenSecretRef": {
                        "key": null,
                        "name": null
                      },
                      "url": null
                    },
                    "tpp": {
                      "caBundle": null,
                      "credentialsRef": {
                        "name": null
                      },
                      "url": null
                    },
                    "zone": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "acme": [
                        "object",
                        {
                          "caBundle": "string",
                          "disableAccountKeyGeneration": "bool",
                          "email": "string",
                          "enableDurationFeature": "bool",
                          "externalAccountBinding": [
                            "object",
                            {
                              "keyAlgorithm": "string",
                              "keyID": "string",
                              "keySecretRef": [
                                "object",
                                {
                                  "key": "string",
                                  "name": "string"
                                }
                              ]
                            }
                          ],
                          "preferredChain": "string",
                          "privateKeySecretRef": [
                            "object",
                            {
                              "key": "string",
                              "name": "string"
                            }
                          ],
                          "server": "string",
                          "skipTLSVerify": "bool",
                          "solvers": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "dns01": [
                                    "object",
                                    {
                                      "acmeDNS": [
                                        "object",
                                        {
                                          "accountSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "host": "string"
                                        }
                                      ],
                                      "akamai": [
                                        "object",
                                        {
                                          "accessTokenSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "clientSecretSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "clientTokenSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "serviceConsumerDomain": "string"
                                        }
                                      ],
                                      "azureDNS": [
                                        "object",
                                        {
                                          "clientID": "string",
                                          "clientSecretSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "environment": "string",
                                          "hostedZoneName": "string",
                                          "managedIdentity": [
                                            "object",
                                            {
                                              "clientID": "string",
                                              "resourceID": "string"
                                            }
                                          ],
                                          "resourceGroupName": "string",
                                          "subscriptionID": "string",
                                          "tenantID": "string"
                                        }
                                      ],
                                      "cloudDNS": [
                                        "object",
                                        {
                                          "hostedZoneName": "string",
                                          "project": "string",
                                          "serviceAccountSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "cloudflare": [
                                        "object",
                                        {
                                          "apiKeySecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "apiTokenSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "email": "string"
                                        }
                                      ],
                                      "cnameStrategy": "string",
                                      "digitalocean": [
                                        "object",
                                        {
                                          "tokenSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "rfc2136": [
                                        "object",
                                        {
                                          "nameserver": "string",
                                          "tsigAlgorithm": "string",
                                          "tsigKeyName": "string",
                                          "tsigSecretSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "route53": [
                                        "object",
                                        {
                                          "accessKeyID": "string",
                                          "accessKeyIDSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "auth": [
                                            "object",
                                            {
                                              "kubernetes": [
                                                "object",
                                                {
                                                  "serviceAccountRef": [
                                                    "object",
                                                    {
                                                      "audiences": [
                                                        "list",
                                                        "string"
                                                      ],
                                                      "name": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "hostedZoneID": "string",
                                          "region": "string",
                                          "role": "string",
                                          "secretAccessKeySecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "webhook": [
                                        "object",
                                        {
                                          "config": "dynamic",
                                          "groupName": "string",
                                          "solverName": "string"
                                        }
                                      ]
                                    }
                                  ],
                                  "http01": [
                                    "object",
                                    {
                                      "gatewayHTTPRoute": [
                                        "object",
                                        {
                                          "labels": [
                                            "map",
                                            "string"
                                          ],
                                          "parentRefs": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "group": "string",
                                                "kind": "string",
                                                "name": "string",
                                                "namespace": "string",
                                                "port": "number",
                                                "sectionName": "string"
                                              }
                                            ]
                                          ],
                                          "serviceType": "string"
                                        }
                                      ],
                                      "ingress": [
                                        "object",
                                        {
                                          "class": "string",
                                          "ingressClassName": "string",
                                          "ingressTemplate": [
                                            "object",
                                            {
                                              "metadata": [
                                                "object",
                                                {
                                                  "annotations": [
                                                    "map",
                                                    "string"
                                                  ],
                                                  "labels": [
                                                    "map",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "name": "string",
                                          "podTemplate": [
                                            "object",
                                            {
                                              "metadata": [
                                                "object",
                                                {
                                                  "annotations": [
                                                    "map",
                                                    "string"
                                                  ],
                                                  "labels": [
                                                    "map",
                                                    "string"
                                                  ]
                                                }
                                              ],
                                              "spec": [
                                                "object",
                                                {
                                                  "affinity": [
                                                    "object",
                                                    {
                                                      "nodeAffinity": [
                                                        "object",
                                                        {
                                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "preference": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchFields": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ]
                                                                  }
                                                                ],
                                                                "weight": "number"
                                                              }
                                                            ]
                                                          ],
                                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                                            "object",
                                                            {
                                                              "nodeSelectorTerms": [
                                                                "list",
                                                                [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchFields": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ]
                                                                  }
                                                                ]
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "podAffinity": [
                                                        "object",
                                                        {
                                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "podAffinityTerm": [
                                                                  "object",
                                                                  {
                                                                    "labelSelector": [
                                                                      "object",
                                                                      {
                                                                        "matchExpressions": [
                                                                          "list",
                                                                          [
                                                                            "object",
                                                                            {
                                                                              "key": "string",
                                                                              "operator": "string",
                                                                              "values": [
                                                                                "list",
                                                                                "string"
                                                                              ]
                                                                            }
                                                                          ]
                                                                        ],
                                                                        "matchLabels": [
                                                                          "map",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "matchLabelKeys": [
                                                                      "list",
                                                                      "string"
                                                                    ],
                                                                    "mismatchLabelKeys": [
                                                                      "list",
                                                                      "string"
                                                                    ],
                                                                    "namespaceSelector": [
                                                                      "object",
                                                                      {
                                                                        "matchExpressions": [
                                                                          "list",
                                                                          [
                                                                            "object",
                                                                            {
                                                                              "key": "string",
                                                                              "operator": "string",
                                                                              "values": [
                                                                                "list",
                                                                                "string"
                                                                              ]
                                                                            }
                                                                          ]
                                                                        ],
                                                                        "matchLabels": [
                                                                          "map",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "namespaces": [
                                                                      "list",
                                                                      "string"
                                                                    ],
                                                                    "topologyKey": "string"
                                                                  }
                                                                ],
                                                                "weight": "number"
                                                              }
                                                            ]
                                                          ],
                                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "labelSelector": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchLabels": [
                                                                      "map",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ],
                                                                "matchLabelKeys": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "mismatchLabelKeys": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "namespaceSelector": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchLabels": [
                                                                      "map",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ],
                                                                "namespaces": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "topologyKey": "string"
                                                              }
                                                            ]
                                                          ]
                                                        }
                                                      ],
                                                      "podAntiAffinity": [
                                                        "object",
                                                        {
                                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "podAffinityTerm": [
                                                                  "object",
                                                                  {
                                                                    "labelSelector": [
                                                                      "object",
                                                                      {
                                                                        "matchExpressions": [
                                                                          "list",
                                                                          [
                                                                            "object",
                                                                            {
                                                                              "key": "string",
                                                                              "operator": "string",
                                                                              "values": [
                                                                                "list",
                                                                                "string"
                                                                              ]
                                                                            }
                                                                          ]
                                                                        ],
                                                                        "matchLabels": [
                                                                          "map",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "matchLabelKeys": [
                                                                      "list",
                                                                      "string"
                                                                    ],
                                                                    "mismatchLabelKeys": [
                                                                      "list",
                                                                      "string"
                                                                    ],
                                                                    "namespaceSelector": [
                                                                      "object",
                                                                      {
                                                                        "matchExpressions": [
                                                                          "list",
                                                                          [
                                                                            "object",
                                                                            {
                                                                              "key": "string",
                                                                              "operator": "string",
                                                                              "values": [
                                                                                "list",
                                                                                "string"
                                                                              ]
                                                                            }
                                                                          ]
                                                                        ],
                                                                        "matchLabels": [
                                                                          "map",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "namespaces": [
                                                                      "list",
                                                                      "string"
                                                                    ],
                                                                    "topologyKey": "string"
                                                                  }
                                                                ],
                                                                "weight": "number"
                                                              }
                                                            ]
                                                          ],
                                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "labelSelector": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchLabels": [
                                                                      "map",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ],
                                                                "matchLabelKeys": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "mismatchLabelKeys": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "namespaceSelector": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchLabels": [
                                                                      "map",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ],
                                                                "namespaces": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "topologyKey": "string"
                                                              }
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ],
                                                  "imagePullSecrets": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "name": "string"
                                                      }
                                                    ]
                                                  ],
                                                  "nodeSelector": [
                                                    "map",
                                                    "string"
                                                  ],
                                                  "priorityClassName": "string",
                                                  "serviceAccountName": "string",
                                                  "tolerations": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "effect": "string",
                                                        "key": "string",
                                                        "operator": "string",
                                                        "tolerationSeconds": "number",
                                                        "value": "string"
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "serviceType": "string"
                                        }
                                      ]
                                    }
                                  ],
                                  "selector": [
                                    "object",
                                    {
                                      "dnsNames": [
                                        "list",
                                        "string"
                                      ],
                                      "dnsZones": [
                                        "list",
                                        "string"
                                      ],
                                      "matchLabels": [
                                        "map",
                                        "string"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            ]
                          ]
                        }
                      ],
                      "ca": [
                        "object",
                        {
                          "crlDistributionPoints": [
                            "list",
                            "string"
                          ],
                          "issuingCertificateURLs": [
                            "list",
                            "string"
                          ],
                          "ocspServers": [
                            "list",
                            "string"
                          ],
                          "secretName": "string"
                        }
                      ],
                      "selfSigned": [
                        "object",
                        {
                          "crlDistributionPoints": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "vault": [
                        "object",
                        {
                          "auth": [
                            "object",
                            {
                              "appRole": [
                                "object",
                                {
                                  "path": "string",
                                  "roleId": "string",
                                  "secretRef": [
                                    "object",
                                    {
                                      "key": "string",
                                      "name": "string"
                                    }
                                  ]
                                }
                              ],
                              "kubernetes": [
                                "object",
                                {
                                  "mountPath": "string",
                                  "role": "string",
                                  "secretRef": [
                                    "object",
                                    {
                                      "key": "string",
                                      "name": "string"
                                    }
                                  ],
                                  "serviceAccountRef": [
                                    "object",
                                    {
                                      "audiences": [
                                        "list",
                                        "string"
                                      ],
                                      "name": "string"
                                    }
                                  ]
                                }
                              ],
                              "tokenSecretRef": [
                                "object",
                                {
                                  "key": "string",
                                  "name": "string"
                                }
                              ]
                            }
                          ],
                          "caBundle": "string",
                          "caBundleSecretRef": [
                            "object",
                            {
                              "key": "string",
                              "name": "string"
                            }
                          ],
                          "clientCertSecretRef": [
                            "object",
                            {
                              "key": "string",
                              "name": "string"
                            }
                          ],
                          "clientKeySecretRef": [
                            "object",
                            {
                              "key": "string",
                              "name": "string"
                            }
                          ],
                          "namespace": "string",
                          "path": "string",
                          "server": "string"
                        }
                      ],
                      "venafi": [
                        "object",
                        {
                          "cloud": [
                            "object",
                            {
                              "apiTokenSecretRef": [
                                "object",
                                {
                                  "key": "string",
                                  "name": "string"
                                }
                              ],
                              "url": "string"
                            }
                          ],
                          "tpp": [
                            "object",
                            {
                              "caBundle": "string",
                              "credentialsRef": [
                                "object",
                                {
                                  "name": "string"
                                }
                              ],
                              "url": "string"
                            }
                          ],
                          "zone": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "helm_release.cert_manager",
            "kind_cluster.default"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
